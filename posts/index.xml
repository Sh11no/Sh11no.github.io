<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>所有文章 - Shino Channel</title>
        <link>http://sh11no.github.io/posts/</link>
        <description>所有文章 | Shino Channel</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Fri, 20 Aug 2021 13:36:08 &#43;0800</lastBuildDate><atom:link href="http://sh11no.github.io/posts/" rel="self" type="application/rss+xml" /><item>
    <title>CNSS2021夏令营游记</title>
    <link>http://sh11no.github.io/cnsssummer/</link>
    <pubDate>Fri, 20 Aug 2021 13:36:08 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://sh11no.github.io/cnsssummer/</guid>
    <description><![CDATA[写在前面 ​	第一次玩CTF属于是，萌新吓傻了。（更新中）
Web 0x01第一次冒险 ​	按照网页提示操作，最后结合提示在cookie中得到一个字符串，使用base64解密得到flag
0x02更简单的计算题 ​	算出来发现提交不了？F12修改输入框的长度限制和提交按钮的disable状态，提交得到flag
0x03卖菜刀 ​	依照题目，使用工具中国菜刀，在网站根目录可以找到flag文件。
Reverse 0x01 Hello Reverse ​	使用ida反编译后即可看到flag
0x02 Where Are U ​	使用ida反编译后到处找找就有了
0x03 吸/吸嘉嘉 ​	反编译后发现程序将flag的每一位字母按位非(~)后与code数组比对。找到code数组，将每一位按位非之后就可以得到答案了。
​	我是手算的，我可能是弱智。
0x05 没想好名字的题目 ​	反编译之后先把变量名改成人能看的，然后发现三个for套for分别在判断行、列、方块是否有重复数字。结合程序名称发现是数独。分析程序前半部分，发现数独的形成模式是将flag[]的数字填入a[]中值为0的部分中。找到a的初始值，做数独即可得到flag。
Pwn 0x01 让我康康你的Nc ​	安装netcat，按题目方式连接之后cat flag即可得到结果。
Crypto 最有意思的难道不是crypto吗
龙王的代码I ​	看程序发现flag就是1000000之内素数的平方和。随便写个线性筛就可以得到答案了。
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  #include &lt;bits/stdc++.h&gt;using namespace std; const int MAXN = 10000050; int notp[MAXN], cntp, p[MAXN], n, m; long long ans; int main() { n = 1000000; notp[1] = 1; for(int i = 2; i &lt;= n; ++i) { if(!]]></description>
</item><item>
    <title>Helloworld</title>
    <link>http://sh11no.github.io/helloworld/</link>
    <pubDate>Fri, 20 Aug 2021 12:11:56 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://sh11no.github.io/helloworld/</guid>
    <description><![CDATA[Hello，world！
让我看看blog行不行]]></description>
</item></channel>
</rss>
